javax.validation.constraints.AssertFalse.message = 반드시 거짓(false)이어야 합니다.
javax.validation.constraints.AssertTrue.message = 반드시 참(true)이어야 합니다.
javax.validation.constraints.DecimalMax.message = 반드시 {value}보다 ${inclusive == true ? '같거나 작어야 합니다. ' : '작아야 합니다.'}
javax.validation.constraints.DecimalMin.message = 반드시 {value}보다 ${inclusive == true ? '같거나 커야 합니다. ' : '커야 합니다.'}
javax.validation.constraints.Digits.message = 숫자 값이 허용 범위를 벗어납니다. (허용 범위: <{integer} 자리>.<{fraction} 자리>)
javax.validation.constraints.Future.message = 반드시 미래 날짜이어야 합니다.
javax.validation.constraints.Max.message = 반드시 {value}보다 같거나 작아야 합니다.
javax.validation.constraints.Min.message = 반드시 {value}보다 같거나 커야 합니다.
javax.validation.constraints.NotNull.message = 반드시 값이 있어야 합니다.
javax.validation.constraints.Null.message = 반드시 값이 없어야 합니다.
javax.validation.constraints.Past.message = 반드시 과거 날짜이어야 합니다.
javax.validation.constraints.Pattern.message = 정규 표현식 "{regexp}" 패턴과 일치해야 합니다.
javax.validation.constraints.Size.message = 반드시 최소값 {min}과(와) 최대값 {max} 사이의 크기이어야 합니다.
org.hibernate.validator.constraints.CreditCardNumber.message = 신용카드 번호가 유효하지 않습니다.
org.hibernate.validator.constraints.EAN.message = {type} 바코드가 유효하지 않습니다.
org.hibernate.validator.constraints.Email.message = 이메일 주소가 유효하지 않습니다.
org.hibernate.validator.constraints.Length.message = 반드시 최소값  {min}과(와) 최대값 {max} 사이의 길이이어야 합니다.
org.hibernate.validator.constraints.LuhnCheck.message = ${value}의 check digit가 유효하지 않습니다.  Luhn Modulo 10 checksum 오류가 발생하였습니다.
org.hibernate.validator.constraints.Mod10Check.message = ${value}의 check digit가 유효하지 않습니다.  Modulo 10 checksum 오류가 발생하였습니다.
org.hibernate.validator.constraints.Mod11Check.message = ${value}의 check digit가 유효하지 않습니다.  Modulo 11 checksum 오류가 발생하였습니다.
org.hibernate.validator.constraints.ModCheck.message = ${value}의 check digit가 유효하지 않습니다.  ${modType}  checksum 오류가 발생하였습니다.
org.hibernate.validator.constraints.NotBlank.message = 반드시 값이 존재하고 공백 문자를 제외한 길이가 0보다 커야 합니다.
org.hibernate.validator.constraints.NotEmpty.message = 반드시 값이 존재하고 길이 혹은 크기가 0보다 커야 합니다.
org.hibernate.validator.constraints.ParametersScriptAssert.message = 스크립트 표현식 "{script}"의 결과가 참(true)이 아닙니다.
org.hibernate.validator.constraints.Range.message = 반드시 최소값 {min}과(와) 최대값 {max} 사이의 범위이어야 합니다.
org.hibernate.validator.constraints.SafeHtml.message = 허용되지 않은 HTML 코드가 포함되어 있습니다.
org.hibernate.validator.constraints.ScriptAssert.message = 스크립트 표현식 "{script}"의 결과가 참(true)이 아닙니다.
org.hibernate.validator.constraints.URL.message = URL이 유효하지 않습니다.
org.hibernate.validator.constraints.br.CNPJ.message = 브라질 기업 납세자 등록 번호가 유효하지 않습니다. (CNPJ)
org.hibernate.validator.constraints.br.CPF.message = 브라질 개인 납세자 등록 번호가 유효하지 않습니다. (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message = 브라질 유권자 ID 카드 번호가 유효하지 않습니다.

javax.validation.constraints.AssertFalse.message = must be false
javax.validation.constraints.AssertTrue.message  = must be true
javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = must be in the future
javax.validation.constraints.Max.message         = must be less than or equal to {value}
javax.validation.constraints.Min.message         = must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = may not be null!!
javax.validation.constraints.Null.message        = must be null
javax.validation.constraints.Past.message        = must be in the past
javax.validation.constraints.Pattern.message     = must match "{regexp}"
javax.validation.constraints.Size.message        = size must be between {min} and {max}
org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = may not be empty
org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                     = must be a valid URL
org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number
